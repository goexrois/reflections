How did viewing a diff between two versions of a file help you see the bug that was introduced?

It makes easy to review changes made to the file, thus is easier to search for error because it 
reduces the amount of text/content you have to inspect.

How could having easy access to the entire history of a file make you a more efficient programmer in
 the long term?

Programmer often modifies working code in order to refactor it or add new functionalities, the 
refactor process can break the code and leave it buggy or non functional, so having an history of 
each file makes easier to inspect where the modifications the programmer have done could have 
broken the code.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in
 Git, vs having versions automatically saved, like Google Docs does?

The pros are clearly that when you decide when to commit you don't generate a ridiculous amount of 
files which mean nothing to the status of the version but the cons are that if your progress is not 
saved regularly you have the risk of losing your work due to unexpeced inconveniences, another con 
could be that a good version historial depends on the criteria of the developer, if the developer 
makes bad decisions on its commits the version historial could be useless.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?

They are designed for different purposes, Google Docs is a text editor so the version control system
is designed for controlling versions of content documents, it doesn't make sense to have support to 
save multiple files when you only need to track one document changes at a time. On the other hand 
git is a VCS  that its widely used for tracking whole projects, which many of them have multiple files. 
It all depends of the scope of the project we need to track. 

How can you use the commands git log and git diff to view the history of files?

Well, git log shows all the commits made since the repository was made, so thats a quickly way to
view the evolution of the files through the development process. If you need to inspect further 
git diff can provide the information of the specific changes between two given commits.

How might using version control make you more confident to make changes that could break something?

Knowing that you always have a previous working version of the file/project which you can go back in
its a relieve to the coder because there is no risk of completely break all the project by your own.
You can always go back to the previous working versions.

Now that you have your workspace set up, what do you want to try using Git for?

I have new web development projects in which i would like to use this tool. I also study engineering
and i would appreciate to apply it to my incoming coding projects.
